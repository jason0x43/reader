generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String        @id @default(cuid())
  email      String        @unique
  username   String        @unique
  config     String?
  feedGroups FeedGroup[]
  password   Password?
  Session    Session[]
  articles   UserArticle[]
}

model Password {
  hash   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Feed {
  id         String          @id @default(cuid())
  url        String          @unique
  title      String
  type       String          @default("rss")
  lastUpdate DateTime        @default(now())
  disabled   Boolean?
  icon       String?
  htmlUrl    String?
  articles   Article[]
  groups     FeedGroupFeed[]
}

model Article {
  id        String        @id @default(cuid())
  articleId String
  feedId    String
  title     String?
  link      String?
  published DateTime
  content   String?
  feed      Feed          @relation(fields: [feedId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users     UserArticle[]

  @@unique([feedId, articleId])
}

model UserArticle {
  userId    String
  articleId String
  read      Boolean?
  saved     Boolean?
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([userId, articleId])
}

model FeedGroup {
  id     String          @id @default(cuid())
  userId String
  name   String
  user   User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  feeds  FeedGroupFeed[]

  @@unique([userId, name])
}

model FeedGroupFeed {
  feedGroupId String
  feedId      String
  feedGroup   FeedGroup @relation(fields: [feedGroupId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  feed        Feed      @relation(fields: [feedId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([feedGroupId, feedId])
}

model Session {
  id      String   @id @default(cuid())
  data    String
  expires DateTime
  userId  String
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
